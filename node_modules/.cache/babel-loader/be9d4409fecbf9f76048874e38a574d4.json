{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0,\n    totalAmount: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const existingItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!existingItem) {\n        state.items.push({\n          id: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        existingItem.quantity = existingItem.quantity + 1;\n        existingItem.totalPrice = existingItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const existinItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (existinItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        existinItem.quantity--;\n        existinItem.totalPrice = existinItem.totalPrice - existinItem.price;\n      }\n    }\n\n  }\n});\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;","map":{"version":3,"sources":["/Users/aristelamarku/Development/bootcamp/phase-5/React-Redux-Project/src/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","totalAmount","reducers","addItemToCart","state","action","newItem","payload","existingItem","find","item","id","push","price","quantity","totalPrice","title","removeItemFromCart","existinItem","filter","cartActions","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAE;AAC3BE,EAAAA,IAAI,EAAE,MADqB;AAE3BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAC,EADI;AAEVC,IAAAA,aAAa,EAAE,CAFL;AAGVC,IAAAA,WAAW,EAAE;AAHH,GAFa;AAO3BC,EAAAA,QAAQ,EAAC;AACLC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAe;AACxB,YAAMC,OAAO,GAAED,MAAM,CAACE,OAAtB;AACA,YAAMC,YAAY,GAAEJ,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAiBC,IAAI,IAAGA,IAAI,CAACC,EAAL,KAAWL,OAAO,CAACK,EAA3C,CAApB;AACAP,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAG,CAACQ,YAAJ,EAAiB;AACfJ,QAAAA,KAAK,CAACL,KAAN,CAAYa,IAAZ,CAAiB;AACfD,UAAAA,EAAE,EAAEL,OAAO,CAACK,EADG;AAEfE,UAAAA,KAAK,EAAEP,OAAO,CAACO,KAFA;AAGfC,UAAAA,QAAQ,EAAE,CAHK;AAIfC,UAAAA,UAAU,EAAET,OAAO,CAACO,KAJL;AAKfhB,UAAAA,IAAI,EAAES,OAAO,CAACU;AALC,SAAjB;AAOD,OARD,MAQK;AACDR,QAAAA,YAAY,CAACM,QAAb,GAAwBN,YAAY,CAACM,QAAb,GAAsB,CAA9C;AACAN,QAAAA,YAAY,CAACO,UAAb,GAA0BP,YAAY,CAACO,UAAb,GAAyBT,OAAO,CAACO,KAA3D;AACH;AACJ,KAjBI;;AAkBLI,IAAAA,kBAAkB,CAACb,KAAD,EAAOC,MAAP,EAAc;AAC5B,YAAMM,EAAE,GAAEN,MAAM,CAACE,OAAjB;AACA,YAAMW,WAAW,GAAGd,KAAK,CAACL,KAAN,CAAYU,IAAZ,CAAiBC,IAAI,IAAGA,IAAI,CAACC,EAAL,KAAYA,EAApC,CAApB;AACAP,MAAAA,KAAK,CAACJ,aAAN;;AACA,UAAGkB,WAAW,CAACJ,QAAZ,KAAwB,CAA3B,EAA8B;AAC3BV,QAAAA,KAAK,CAACL,KAAN,GAAcK,KAAK,CAACL,KAAN,CAAYoB,MAAZ,CAAmBT,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAAvC,CAAd;AACF,OAFD,MAEK;AACDO,QAAAA,WAAW,CAACJ,QAAZ;AACAI,QAAAA,WAAW,CAACH,UAAZ,GAAuBG,WAAW,CAACH,UAAZ,GAAyBG,WAAW,CAACL,KAA5D;AACH;AACJ;;AA5BI;AAPkB,CAAF,CAA7B;AAyCA,OAAO,MAAMO,WAAW,GAAGxB,SAAS,CAACyB,OAA9B;AACP,eAAezB,SAAf","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\n\nconst cartSlice = createSlice ({\n    name: 'cart',\n    initialState :{\n        items:[],\n        totalQuantity: 0,\n        totalAmount: 0\n    },\n    reducers:{\n        addItemToCart(state, action){\n            const newItem =action.payload;\n            const existingItem =state.items.find(item =>item.id ===newItem.id)\n            state.totalQuantity++\n            if(!existingItem){\n              state.items.push({\n                id: newItem.id,\n                price: newItem.price,\n                quantity: 1,\n                totalPrice: newItem.price,\n                name: newItem.title\n              })\n            }else{\n                existingItem.quantity = existingItem.quantity+1;\n                existingItem.totalPrice = existingItem.totalPrice+ newItem.price\n            }\n        },\n        removeItemFromCart(state,action){\n            const id =action.payload;\n            const existinItem = state.items.find(item =>item.id === id)\n            state.totalQuantity--\n            if(existinItem.quantity ===1 ){\n               state.items = state.items.filter(item => item.id !== id)\n            }else{\n                existinItem.quantity--\n                existinItem.totalPrice=existinItem.totalPrice - existinItem.price\n            }\n        }\n    }\n\n})\n\n\nexport const cartActions = cartSlice.actions;\nexport default cartSlice;\n\n"]},"metadata":{},"sourceType":"module"}